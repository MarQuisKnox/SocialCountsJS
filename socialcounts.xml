<?xml version="1.0" encoding="UTF-8"?>
<!--
    SocialCountsJS Open Data Table
    - Written by Seon-Wook Park (http://www.swook.net/)
    - Licensed under LGPLv3
-->
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
	<meta>
		<author>Seon-Wook Park</author>
		<sampleQuery>SELECT * FROM {table} WHERE url='http://swook.github.io/SocialCountsJS/';</sampleQuery>
	</meta>

	<bindings>
		<select itemPath="" produces="JSON">
			<inputs>
				<key id='url' type='xs:string' paramType='variable' required='true' />
			</inputs>
			<execute><![CDATA[
			response.maxAge = 300;
			response.object = {'url': url};
			var o = {
				googleplus: 0,
				facebook: 0,
				twitter: 0,
				linkedin: 0,
				reddit: 0,
				stumbleupon: 0,
				delicious: 0,
				pinterest: 0
			};

			var ourl = url,
			    url = [encodeURIComponent(ourl)],
			    st = (new Date).getTime(),
			    UA = 'SocialCountsJS',
			    timeout = 1000; // 1 second

			// If URL ends with /, try non / path too.
			if (ourl[ourl.length - 1] == '/') url.push(encodeURIComponent(ourl.slice(0, -1)));

			function add(k, c) {
				if (c == '0' || c == 0) return;
				if ((typeof c) != 'number' && c) c = parseInt(c);
				if (o[k] instanceof Array) {
					// Add only if more than 1% difference.
					var p = o[k][o[k].length - 1];
					if (Math.abs(c - p) / c > 0.01) o[k].push(c);
				} else {
					o[k] = [c];
				}
			}

			function googleplus(r) {
				r = y.xpath(r.response, '//div[@id="root"]//script');
				m = r.toString().match(/.*window.__SSR\s*=\s*{\s*c\s*:\s*([0-9\.]+)\s*,/);
				if (!m) return;
				add('googleplus', m[1]);
				y.log('googleplus: '+ ((new Date).getTime() - st));
			}

			function facebook(r) {
				add('facebook', Number(r.response.like_count) + Number(r.response.share_count));
				y.log('facebook: '+ ((new Date).getTime() - st));
			}

			function twitter(r) {
				add('twitter', Number(r.response.count));
				y.log('twitter: '+ ((new Date).getTime() - st));
			}

			function linkedin(r) {
				add('linkedin', Number(r.response.count));
				y.log('linkedin: '+ ((new Date).getTime() - st));
			}

			function reddit(r) {
				if (r.status == 429) {
					if ((new Date).getTime() - st < timeout) {
						y.rest(r.url).accept('application/json').header('User-Agent', UA).get();
					}
					else y.log('reddit request timed out.');
					return;
				}
				var l = y.xpath(r.response, '//score/text()'), t = 0;
				for (var i = 0; i < l.length(); i++) {
					t += Number(l[i]);
				}
				add('reddit', t);
				y.log('reddit: '+ ((new Date).getTime() - st));
			}

			function stumbleupon(r) {
				if (y.xpath(r.response, '//result/views') < 1) return;
				add('stumbleupon', r.response.result.views);
				y.log('stumbleupon: '+ ((new Date).getTime() - st));
			}

			function delicious(r) {
				if (!r.response) return;
				add('delicious', Number(r.response..total_posts));
				y.log('delicious: '+ ((new Date).getTime() - st));
			}

			function pinterest(r) {
				var m = r.response.toString().match(/"count": ([0-9]+)/);
				if (m && m.length) add('pinterest', m[1]);
				y.log('pinterest: '+ ((new Date).getTime() - st));
			}

			// Send all requests
			for (var i = 0; i < url.length; i++) {
				y.rest("https://apis.google.com/u/0/_/+1/fastbutton?url="+url[i], googleplus)
					.accept('text/html').get();
				y.rest("https://api.facebook.com/method/fql.query?format=json&query=select%20like_count,share_count%20from%20link_stat%20where%20url=%27"+url[i]+"%27", facebook)
					.accept('application/json').get();
				y.rest("http://urls.api.twitter.com/1/urls/count.json?url="+url[i], twitter)
					.accept('application/json').get();
				y.rest("http://www.linkedin.com/countserv/count/share?format=json&url="+url[i], linkedin)
					.accept('application/json').get();
				y.rest("http://www.reddit.com/api/info.json?url="+url[i], reddit).accept('application/json')
					.header('User-Agent', UA).get();
				y.rest("http://www.stumbleupon.com/services/1.01/badge.getinfo?url="+url[i], stumbleupon)
					.accept('application/json').get();
				y.rest("http://feeds.delicious.com/v2/json/urlinfo/data?url="+url[i], delicious)
					.accept('application/json').get();
				y.rest("http://api.pinterest.com/v1/urls/count.json?url="+url[i], pinterest)
					.accept('application/json').get();
			}
			y.sync(true);

			// Reduce and sum
			for (k in o) {
				if (o[k] instanceof Array) {
					if (o[k].length == 1) {
						o[k] = o[k][0];
						continue;
					}
					var ma = {}, c = o[k];
					for (var i = 0; i < c.length; i++) {
						ma[c[i]] = c[i];
					}
					o[k] = 0;
					for (c in ma) {
						o[k] += ma[c];
					}
				}
			}
			response.object.counts = o;
			]]></execute>
		</select>
	</bindings>
</table>
